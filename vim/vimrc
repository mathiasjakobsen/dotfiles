scriptencoding utf-8

set nocompatible
set langmenu=en_US
set encoding=utf-8
set fileencoding=utf-8
let $LANG = 'en_US'
filetype off


let g:python3_host_prog = '/opt/homebrew/bin/python3'
let g:python2_host_prog = '/usr/bin/python'


let mapleader = ","

set rtp+=~/.vim/bundle/Vundle.vim
set rtp+=/usr/local/opt/fzf

call vundle#begin()
  " Plugin 'airblade/vim-gitgutter'
  Plugin 'gmarik/Vundle.vim'
  Plugin 'itchyny/lightline.vim'
  Plugin 'junegunn/fzf'
  Plugin 'junegunn/fzf.vim'
  Plugin 'roman/golden-ratio'
  Plugin 'sheerun/vim-polyglot'
  Plugin 'tpope/vim-commentary'
  Plugin 'tpope/vim-fugitive'
  Plugin 'tpope/vim-endwise'
  Plugin 'w0rp/ale'
  Plugin 'wakatime/vim-wakatime'
  " Plugin 'ervandew/supertab'
  Plugin 'janko-m/vim-test'
  Plugin 'github/copilot.vim'
  Plugin 'dbakker/vim-projectroot'
call vundle#end()

let g:rootmarkers = ['.projectroot', 'docker-compose.yml', '.git', '.hg', '.svn', '.bzr','_darcs','build.xml']


" Open FZF results in Quickfix (Ctrl+A and then Ctrl+Q)

let $FZF_DEFAULT_OPTS = '--bind ctrl-a:select-all'
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

function! s:build_quickfix_list(lines)
  call setqflist(map(copy(a:lines), '{ "filename": v:val }'))
  copen
  cc
endfunction

let g:fzf_action = {
  \ 'ctrl-q': function('s:build_quickfix_list'),
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }



" Rename current file, thanks Gary Bernhardt via Ben Orenstein
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction

noremap <leader>ren :call RenameFile()<cr>
nnoremap <leader>rm :call delete(expand('%')) \| bdelete!<CR>


" Tests
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" Formatting
nmap <silent> <leader>xml :%!xmllint --format -<CR>
nmap <silent> <leader>json :%!python -m json.tool<CR>
nmap <silent> <leader>lint :ALEFix<CR>


" Mappings for IO operations
noremap <leader>w :w<CR>
noremap <leader>q :q<CR>
noremap <leader>f :FZF<CR>


" Search current word
noremap <leader>ag :Ag <c-r>=expand("<cword>")<cr><Enter>
nnoremap \ :Ag<SPACE>

" Clear search highlights
noremap <silent><leader>/ :nohls<CR>

" Use 'h', 'j', 'k' and 'l' to nagivate splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Open splits with leader
noremap <leader>vs :vs %<cr>
noremap <leader>ss :split %<cr>

" Use '-' and '+' to resize window
noremap - <C-W><
noremap + <C-W>>
noremap <A-j> <C-W>-
noremap <A-k> <C-W>+

" Open shortcuts.txt
nmap <leader>s :e ~/dotfiles/vim/shortcuts.txt<CR>


set showcmd                                 " Display incomplete commands
set showmode                                " Display the mode you're in
" set pastetoggle=<F2>
set backspace=indent,eol,start              " Intuitive backspacing
set hidden                                  " Handle multiple buffers better
set wildmenu                                " Enhanced command line completion
set wildmode=list:longest                   " Complete files like a shell
set ignorecase                              " Case-insensitive searching
set smartcase                               " But case-sensitive if expression contains a capital letter
set number                                  " Show line numbers
set relativenumber                          " Show relative line numbers
set ruler                                   " Show cursor position
set incsearch                               " Highlight matches as you type
set hlsearch                                " Highlight matches
set nofoldenable                            " Disable folding
set wrap                                    " Turn on line wrapping
set scrolloff=6                             " Show 3 lines of context around the cursor.
set showmatch
set title                                   " Set the terminal's title
set visualbell                              " No beeping
set noeb vb t_vb=                           " Stop the god damn beeps!
set nobackup                                " Don't make a backup before overwriting a file
set nowritebackup                           " And again
set noswapfile                              " Don't make swapfiles
set backupskip=/tmp/*,/private/tmp/*
set undodir=~/.vim/undo
set expandtab                               " Use spaces instead of tabs
set tabstop=4                               " <Tab> == 4 spaces
set shiftwidth=4
set backspace=2
set smarttab
set laststatus=2                            " Always show the status line
set autoindent                              " Indent at the same level as previous line
set smartindent
set shortmess=a                             " Avoid 'Hit ENTER to continue'

let g:lightline = {
      \ 'colorscheme': 'jellybeans',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'readonly', 'filename', 'modified' ] ]
      \ },
      \ }

filetype plugin indent on
syntax on



autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 softtabstop=0 expandtab

:highlight Pmenu ctermfg=NONE ctermbg=236 cterm=NONE guifg=NONE guibg=#64666d gui=NONE
:highlight PmenuSel ctermfg=NONE ctermbg=24 cterm=NONE guifg=NONE guibg=#204a87 gui=NONE

